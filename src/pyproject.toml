[tool.poetry]
name = "pyclashbot"
version = "v0.0.0"
description = "Automated Clash Royale"
readme = "../README.md"
authors = [
  "Matthew Miglio <matthew@martinmiglio.dev>",
  "Martin Miglio <code@martinmiglio.dev>",
]
homepage = "https://pyclashbot.app"
repository = "https://github.com/matthewmiglio/py-clash-bot"
documentation = "https://pyclashbot.app"
classifiers = [
  "Intended Audience :: End Users/Desktop",
  "Environment :: Win32 (MS Windows)",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.11",
  "Topic :: Games/Entertainment",
]
keywords = ["clash royale", "bot", "automation"]
include = ["../README.md", "pyclashbot/detection/reference_images/**/*.png"]


[tool.poetry.dependencies]
python = "^3.11"
pillow = "^9.4.0"
opencv-python = "^4.7.0"
numpy = "^1.24.3"
pygetwindow = "^0.0"
joblib = "^1.2"
requests = "^2.31"
PySimpleGUI = "^4.60"
ahk = { extras = ["binary"], version = "^0.14.2" }
pymemuc = "^0.4.2"
wmi = "^1.5.1"
psutil = "^5.9.5"


[tool.poetry.group.build]
optional = true


[tool.poetry.group.build.dependencies]
cx-logging = "^3.1.0" # specify version of cx_logging for cx_freeze to run with python 3.11
Cx_Freeze = "^6.15.1"


[tool.poetry.group.dev]
optional = true


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
black = "^23.3.0"
matplotlib = "^3.7.1" # used in debug.py
ipykernel = "^6.23.2"
vulture = "^2.6"
isort = "^5.12.0"
prospector = "^1.10.2"


[tool.poe.tasks.tag]
shell = """
git push origin master
git tag -a $Env:tagname -m "Release $Env:tagname"
git push origin $Env:tagname
"""
interpreter = "pwsh"


[[tool.poe.tasks.tag.args]]
name = "tagname"
default = "dev"
positional = true
required = true


[tool.poe.tasks.vulture]
shell = """
poetry run vulture pyclashbot --min-confidence 60
"""
interpreter = "pwsh"

[tool.poe.tasks.lint]
shell = """
poetry run prospector pyclashbot
"""
interpreter = "pwsh"


[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''


[tool.isort]
profile = "black"


[tool.pylint.main]
ignore = ["build", "debug"]
py-version = "3.10"
suggestion-mode = true
disable = [
  "C0114", # missing-module-docstring
  "C0115", # missing-class-docstring
  "C0116", # missing-function-docstring
  "C0301", # line-too-long
  "C0103", # invalid-name
]
